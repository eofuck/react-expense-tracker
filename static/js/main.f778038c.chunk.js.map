{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f778038c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return <h2>Expense Tracker</h2>;\n};\n\nexport default Header;\n","export default (state, action) => {\n  switch (action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n//Provider provides states and actios to components that it's wrapped around\n\n// inital state\nconst initialState = {\n  transactions: [\n    { id: 1, text: 'Flower', amount: -20 },\n    { id: 2, text: 'Salary', amount: 300 },\n    { id: 3, text: 'Book', amount: -10 },\n    { id: 4, text: 'Camera', amount: 150 },\n  ],\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id,\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nfunction Balance() {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </>\n  );\n}\n\nexport default Balance;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nfunction IncomeExpenses() {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div className='inc-exp-container'>\n      <div>\n        <h4>Income</h4>\n        <p className='money plus'>{income}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className='money minus'>{expense}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default IncomeExpenses;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nfunction Transaction({ transaction }) {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? '-' : '+';\n\n  return (\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n      {transaction.text}\n      <span>\n        {sign}${Math.abs(transaction.amount)}\n      </span>\n      <button\n        onClick={() => deleteTransaction(transaction.id)}\n        className='delete-btn'\n      >\n        x\n      </button>\n    </li>\n  );\n}\n\nexport default Transaction;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\n\nfunction TransactionList() {\n  //deconstrucs transactions from GlobalContext\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul className='list'>\n        {transactions.map((transaction) => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default TransactionList;\n","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount,\n    };\n\n    addTransaction(newTransaction);\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className='form-control'>\n          <label htmlFor='text'>Text</label>\n          <input\n            type='text'\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder='Enter text...'\n          />\n        </div>\n        <div className='form-control'>\n          <label htmlFor='amount'>\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type='number'\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder='Enter amount...'\n          />\n        </div>\n        <button className='btn'>Add transaction</button>\n      </form>\n    </>\n  );\n};\nexport default AddTransaction;\n","import './App.css';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\n\nimport {GlobalProvider} from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className='container'>\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}